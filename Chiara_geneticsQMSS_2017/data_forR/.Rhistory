setwd(~"~/Home/Thiago/Glottobank/IntroToR_forDistribution")
setwd("~/Home/Thiago/Glottobank/IntroToR_forDistribution")
setwd(~/Home/Thiago/Glottobank/IntroToR_forDistribution)
setwd('~/Home/Thiago/Glottobank/IntroToR_forDistribution')
library(readr)
WALS_WordOrder <- read_csv("~/Thiago/Glottobank/IntroToR_forDistribution/data/WALS_WordOrder.csv")
View(WALS_WordOrder)
d <- read.csv(WALS_WordOrder)
d <- read.csv(WALS_WordOrder, stringasfactors = F)
d <- read.csv(WALS_WordOrder, stringAsFactors = F)
d
d <- WALS_WordOrder
d
dim(d)
d
str(d)
head(d)
head(d[1:3])
head(d[1:3, 1:3])
names(d)
d$latitude
allLAtitude<-d$latitude
allLAtitude[1:5]
table(d$BasicWordOrder)
table(d$latitude)
table(d$latitude>0)
d$latitude > 0
northernHemisphere <- d$latitude > 0
table(northernHemisphere)
table(northernHemisphere[d$BasicWordOrder])
table(northernHemisphere, d$BasicWordOrder)
head(d)
d$NHemisphere <- d$latitude > 0
head(d)
d
str()
str(d)
northEastQ <- d$latitude > 0 & d$longitude > 0
sum(northEastQ)
sum(northernHemisphere)
sum(northernHemisphere[d$BasicWordOrder = SVO])
sum(northernHemisphere[d$BasicWordOrder:SVO])
table(northEastQ, d$BasicWordOrder)
library(readr)
Glottolog_Data <- read_csv("~/Thiago/Glottobank/IntroToR_forDistribution/data/Glottolog_Data.csv")
View(Glottolog_Data)
gd <- Glottolog_Data
str(gd)
gd
rownames(Glottolog_Data) <- Glottolog_Data$glotto.code
rownames(Glottolog_Data) <- gd$glotto.code
rownames(glottoData) <- glottoData$glotto.code
head(gd)
data.frame(Glottolog_Data)
rownames(glottoData) <- glottoData$glotto.code
rownames(glottoData) <- Glottolog_Data$glotto.code
rownames(Glottolog_Data) <- Glottolog_Data$glotto.code
head(Glottolog_Data)
head(gd)
rownames(gad) <- Glottolog_Data$glotto.code
rownames(gd) <- Glottolog_Data$glotto.code
head(gd)
gd['achi1257']
gd['wint1259']
gd['WINTU']
gd['Wintu']
gd <- data.frame(Glottolog_Data)
rownames(gd) <- Glottolog_Data$glotto.code
head(gd)
gd[1, 0]
gd[1, ]
gd[ ,1]
gd['wint1259']
gd['wint1259',]
d$family <- gd[d$glottocode, ]$glotto.family
head(gd)
d$family <- gd[match(d$glottocode, gd%glotto.code),]$glotto.family
d$family <- gd[match(d$glottocode, gd$glotto.code),]$glotto.family
head(d)
d[,9]
d2 <- merge(d, gd, by.x='glottocode', by.y='glotto.code')
d2
d
gd
d2
d2[match(name, glotto.name)]
match(d2$name, d2$glotto.name)
match(d2$Name, d2$glotto.name)
d3 <- match(d, gd, by.x='name', by.y='glotto.name')
d3 <- merge(d, gd, by.x='name', by.y='glotto.name')
d3 <- merge(d, gd, by.x='glotto.name', by.y='name')
d3 <- merge(d, gd, by.x='glotto.name', by.y='name')
d
d3 <- merge(d, gd, by.x='glotto.name', by.y='Name')
gd
d3 <- merge(d, gd, by.x='glotto.name', by.y='Name')
d3 <- merge (d, gd, by.x='glotto.name', by.y='Name')
d3 <- merge (d, gd, by.x='glotto.name', by.y='Name')
match(d2$Name, d2$glotto.name)
d3 <- merge(d2$Name, d2$glotto.name)
d3
str(d3)
table(d2)
d3
d <- WALS_WordOrder
d
gd
d
str(gd)
str(d)
d$family <- gd[match(d$glottocode, gd$glotto.code),]$glotto.family
str(d)
str(d)
View(d2)
gd$latitude <- d[match(d$glottocode, gd$glotto.code)]$latitude
detach("package:datasets", unload=TRUE)
detach("package:graphics", unload=TRUE)
detach("package:grDevices", unload=TRUE)
detach("package:stats", unload=TRUE)
library("stats", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages("ade4")
setwd("~/GitHub/LingGenXSocGen")
d <- read.csv("grambank_f51.tsv")
d <- read.tsv("grambank_f51.tsv")
view.tsv("grambank_f51.tsv")
data.table("grambank_f51.tsv")
d <- data.table("grambank_f51.tsv")
library(rio)
library("rio")
install.packages("rio")
library(rio)
instal(‘clipr’, ‘csvy’, ‘feather’, ‘fst’, ‘readODS’, ‘rmatio’, ‘xml2’, ‘yaml’)
install(‘clipr’, ‘csvy’, ‘feather’, ‘fst’, ‘readODS’, ‘rmatio’, ‘xml2’, ‘yaml’)
install_formats(‘clipr’, ‘csvy’, ‘feather’, ‘fst’, ‘readODS’, ‘rmatio’, ‘xml2’, ‘yaml’)
install_formats('clipr', 'csvy', 'feather', 'fst', 'readODS', 'rmatio', 'xml2', 'yaml')
install_formats('clipr', 'csvy', 'feather', 'fst', 'readODS', 'rmatio', 'xml2', 'yaml')
y
y
library(rio)
d <- import("grambank_f51.tsv")
head(d)
view(d)
str(d)
table(d$V3)
View(d)
setwd("~/GitHub/qmss-2017/Chiara_geneticsQMSS_2017/data_forR")
ls
rownames(listaComplete)<-listaComplete$populationName
listaComplete <- read.table("listaComplete.txt",sep="\t", header=T)
rownames(listaComplete)<-listaComplete$populationName
matGen<-read.csv("PopDistance.csv")
colnames(matGen)<-rownames(matGen)
matLin<-read.table("DistLangOceania.txt", sep="\t")
colnames(matLin)<-rownames(matLin)
colnames(matLin)->listaPopOceania
listaOceania<-listaComplete[listaPopOceania,]
matGenOceania<-matGen[which(rownames(matGen)%in%listaPopOceania),which(colnames(matGen)%in%listaPopOceania),]
matGenOceania<-matGenOceania[listaPopOceania,listaPopOceania]
d(matGenOceania)
dim(matGenOceania)
dim(listaOceania)
install.packages("fields", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(fields)
library(fields)
library(maps)
library(geosphere)
install.packages("geosphere", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages("rworldmap", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(rwordlmap)
install.packages("rworldmap", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(rworldmap)
load(geosphere)
library(geosphere)
library(rwordlmap)
library(rworldmap)
map(database = "world", regions = ".", col="grey20", fill=TRUE,  lwd=0.1)
points(x=listaComplete$lon, y=listaComplete$lat, pch=19,  cex=0.3, col=as.character(listaComplete$colorCode))
fam<-read.table("LFamiliesOceania.txt", as.is=T, header=T, sep="\t")
rownames(fam)<-fam[,1]
famm<-fam[listaPopOceania,]
families<-table(famm[,3])
colorcod<-rainbow(length(families))
colorstring<-c(rep(NA, length(famm[,3])))
for (i in 1:length(families)) {
colorstring[which(famm[,3]==labels(families[i]))]<-colorcod[i]
}
View(listaComplete)
fam
listaOceania<-listaOceania[listaPopOceania,]
map(database = "world", regions = ".", xlim=c(140,190),ylim=c(-43,13),col="grey", fill=TRUE,  lwd=0.1)
points(x=listaOceania$lon, y=listaOceania$lat, pch=19,  cex=0.5, col=colorstring)
text(x=listaOceania$lon, y=listaOceania$lat,labels=listaOceania$populationName,cex=0.5, font=2)
library(ecodist)
m1<-as.dist(matGenOceania)
m2<-as.dist(matLin)
m3<-as.dist(matGeoOceania)
m1<-as.dist(matGenOceania)
m2<-as.dist(matLin)
m3<-as.dist(matGenOceania)
m1<-as.dist(matGenOceania)
m2<-as.dist(matLin)
m3<-as.dist(matGeoOceania)
rdist.earth (lista, miles=FALSE) ->matGeoOceania
matGeoOceania[upper.tri(matGeoOceania)] <- NA
diag(matGeoOceania) = 0
rdist.earth (lista, miles=FALSE) ->matGeoOceania
lista<-listaOceania[,c(6,7)]
rdist.earth (lista, miles=FALSE) ->matGeoOceania
matGeoOceania[upper.tri(matGeoOceania)] <- NA
diag(matGeoOceania) = 0
m1<-as.dist(matGenOceania)
m2<-as.dist(matLin)
m3<-as.dist(matGeoOceania)
plot(m1,m2)
m2
plot(m1,m3)
(plot(m1,m3))
plot(m1,m3)
install.packages("phangorn", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages("phangorn", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages("pegas", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages("phangorn", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
librar(phangorn)
library(phangorn)
library(pegas)
upgmatreeGen<-upgma(m1)
plot.phylo(upgmatreeGen,  tip.col=colorstring)
unlist(names(families))->nomilegenda
legend("bottomleft",nomilegenda,text.col=colorcod)
upgmatreeLing<-upgma(m2)
plot.phylo(upgmatreeLing,  tip.col=colorstring)
unlist(names(families))->nomilegenda
legend("bottomleft",nomilegenda,text.col=colorcod)
